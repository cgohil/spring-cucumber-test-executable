spring:
  application:
    name: Functional-Tests
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:ddi-db;Mode=Oracle;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;
    paltform: oracle
    hikari:
      max-lifetime: 1800000
      maximum-pool-size: 10
      connection-timeout: 60000
      minimum-idle: 2
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: auto
    properties:
      jdbc:
        time_zone: UTC
  output:
    ansi:
      enabled: always

  kafka:
    bootstrap-servers: "${spring.embedded.kafka.brokers}"
    properties:
      sasl.mechanism: PLAIN
      security.protocol: PLAINTEXT
      schema.registry.url: mock://127.0.0.1:8081
      auto.register.schemas: true
      specific.avro.reader: true
    consumer:
      client-id: functional-test
      group-id: functional-test
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      ack: 1
      client-id: functional-test
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroDeserializer



kafka.topics:
  booking-notification: booking-notification-topic
  transaction-notification: transaction-notification-topic